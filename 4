#include "iostream"
using namespace std;
struct Window { //структура Window с заданными в ней параметрами кинопоказов
	char cinema[50];
	char film[50];
	unsigned int time, date, cost;
};

void PrintTable(Window* table, int lines) { //функция вывода таблицы с введенными в нее данными. Параметры: указатель на таблицу(?), количество строк
	cout << "====================================================================================" << endl;
	cout << "| Кинотеатр |" << "  Фильм   |" << "  Начало    |" << "    Дата     |" << "  Стоимость   |";
	cout << "====================================================================================" << endl;

	//проход по таблице
	for (int i = 0; i < lines; i++) { //мы построчно вводим параметры, указывая необходимые промежутки так, чтобы таблица была ровной
		cout.width(0);
		cout << "| " << table[i].cinema;  //table[i].cinema - берем введенное значение, обращаемся к структуре
		cout.width(16 - strlen(table[i].cinema));

		cout << "| " << table[i].film;
		cout.width(16 - strlen(table[i].film));

		cout << "| " << table[i].time;
		cout.width(4);

		cout << "| " << table[i].date;
		cout.width(4);

		cout << "| " << table[i].date;
		cout.width(4);

		cout << "|" << endl;
	}
	cout << "====================================================================================" << endl;
}

void FillWindow(Window& window) { //ввод значений в поля структуры
	cout << endl;
	cout << "Заполнение записи для одного показа: " << endl;
	cout << "Введите название кинотеатра: ";
	gets_s(window.cinema);
	cout << "Введите название фильма: ";
	gets_s(window.film);
	cout << "Введите время начала показа: ";
	cin >> window.time;
	cout << "Введите дату начала показа: ";
	cin >> window.date;
	cout << "Введите стоимость показа: ";
	cin >> window.cost;
}

void Adds(Window window, Window* table, int lines) { //функция, принимающая запись показа для вставки, саму таблицу и количество ее строк
	table[lines - 1] = window; //присвоение последней таблице ячейки значения заполненной записи
}

void DelDate(Window* table, int& lines, int Date) { //Таблица, строки таблицы, заданная дата
	for (int i = 0; i < lines; i++) { //проходимся по строкам
		if (table[i].date == Date) { //если обнаружена запись с такой датой, под индексом i
			for (int j = i; j < lines; j++) { //то мы начинаем перебор от i до конца таблицы
				table[j] = table[j + 1]; //и сдвигаем все оставшиеся киносеансы влево, тем самым удаляя i-й элемент
			}
			lines--;
			i--;
		}
	}
}

void Lists(Window* table, int& lines, Window* finds, auto Film) {
	int iterator = 0;
	for (int i = 0; i < lines, i++) {
		if (!strcmp(table[i].film, Film)) {
			finds[iterator] = table[i];
			iterator++;
		}
	}
	lines = iterator;
}

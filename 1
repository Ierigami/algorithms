
#include <iostream>;
#include <stdio.h>;
#include <stdlib.h>;
#include <time.h>;
#include <vector>;

#define m 100
using namespace std;

void input(int x[], int n) {
	/*if ((n > 0) && (n < m)) {
		srand(time(0));
		for (int i = 0; i < n; i++) {
			x[i] = 100 + rand() % 300;
		}*/
	cout << "Введите n-е количество элементов массива" << endl;
	for (int i = 0; i < n; i++) {
		cin >> x[i];
	}
}

void output(int x[], int n) {
	for (int i = 0; i < n; i++) {
		cout << x[i] << " ";
	}
}



int check(int x[], int n) {
	int c; //цифра элемента массива
	for (int i = 0; i < n; i++) {
		bool N = true;
		int el = x[i]; //элемент массива
		while (el > 0) {
			c = el % 10;
			if (c == 0) {
				N = false;
				break;
			}
			if (x[i] % c != 0) {
				N = false;
				break;
			}
			el /= 10;
		}
		if (N) {
			return i;
		}
	}
	return -1;
}

int checkdin(int* arr, int n) {
	int c; //цифра элемента массива
	for (int i = 0; i < n; i++) {
		bool N = true;
		int el = arr[i]; //элемент массива
		while (el > 0) {
			c = el % 10;
			if (c == 0) {
				N = false;
				break;
			}
			if (arr[i] % c != 0) {
				N = false;
				break;
			}
			el /= 10;
		}
		if (N) {
			return i;
		}
	}
	return -1;
}

void paste(int x[], int n, int v) {
	for (int i = n; i > (v + 1); i--) {
		x[i] = x[i - 1];
	}
	cout << "Введите элемент, который необходимо вставить в массив: ";
	cin >> x[v + 1];
}

int de(int x[], int n) {
	int e = n;
	int count = 0;
	for (int i = 0; i < e; i++) {
		if (x[i] % 3 == 0) {
			while (x[i] % 3 == 0) {
				for (int j = i; j < e; j++) {
					x[j] = x[j + 1];
				}
				count += 1;
			}
		}
	}
	n -= count;
	return n;
}

int* pastedin(int* arr, int n, int v) {
	arr = (int*)realloc(arr, sizeof(int) * (n + 1));
	for (int i = n; i > (v + 1); i--) {
		arr[i] = arr[i - 1];
	}
	int l;
	cout << "Введите элемент, который необходимо вставить в массив: ";
	cin >> arr[v + 1];
	return arr;
}

void inpvect(int n, vector <int>& myVector) {
	srand(time(0));
	cout << "Введите n-е количество элементов вектора: ";
	for (int i = 0; i < n; i++) {
		cin >> myVector[i];
	}
}

void outvect(int n, vector <int> myVector) {
	for (int i = 0; i < n; i++) {
		cout << myVector[i] << " ";
	}
}

int checkvect(int n, vector <int> myVector) {
	int c; //цифра элемента массива
	for (int i = 0; i < n; i++) {
		bool N = true;
		int el = myVector[i]; //элемент массива
		while (el > 0) {
			c = el % 10;
			if (c == 0) {
				N = false;
				break;
			}
			if (myVector[i] % c != 0) {
				N = false;
				break;
			}
			el /= 10;
		}
		if (N) {
			return i;
		}
	}
	return -1;
}


void pastevect(int k, vector <int>& myVector, int& n) {
	if (k != -1) {
		int l;
		cout << "Введите элемент, который необходимо вставить в вектор: ";
		cin >> l;
		myVector.insert(myVector.begin() + (k + 1), l);
		n++;
	}
}


void delvect(int& n, vector <int>& myVector) {
	for (int i = 0; i < myVector.size(); i++)
		if (myVector[i] % 3 == 0) {
			myVector.erase(myVector.begin() + i);
			n--;
		}
}

int* deldin(int* arr, int& n) {
	for (int i = 0; i < n; i++) {
		if (arr[i] % 3 == 0) {
			for (int j = i; j < n; j++) {
				arr[j] = arr[j + 1];
			}
			arr = (int*)realloc(arr, sizeof(int) * (n - 1));
			n -= 1;
		}
	}
	return arr;
}

int main() {
	setlocale(0, "");
	int n, v = 0, Q, z;
	int x[m];
	int count = 0;
	cout << "ввести количество обрабатываемых элементов массива: ";
	cin >> n;
	int* arr = new int[n];
	vector <int> myVector(n);
	cout << "введите 1, если статический массив, 2, если динамический, 3 - вектор: " << endl;
	cin >> Q;

	if (Q == 1) {
		
		input(x, n);
		cout << endl;
	}
	else if (Q == 2) {
		input(arr, n);
	}
	else if (Q == 3) {
		inpvect(n, myVector);
	}

	bool type1 = false;
	while (true) {
		cout << "Введите номер задания: ";
		cin >> z;

		if (Q == 1) {
			if (z == 1) {
				v = check(x, n);
				cout << "Индекс элемента, значение которого делится на каждую цифру числа: " << v << endl;
				type1 = true;
			}
			if (z == 2) {
				if (type1) {
					paste(x, n, v);
					n += 1;
					cout << "Массив, полученный после вставки элемента: ";
					output(x, n);
					cout << endl;
				}
				else {
					cout << "Невозможно выполнить задание, так как индекс элемента не был найден" << endl;
				}
			}
			if (z == 3) {
				n = de(x, n);
				cout << "Массив, полученный после удаления элементов, кратных трём: ";
				output(x, n);
				cout << endl;
			}
		}
		else if (Q == 2) {
			if (z == 1) {
				v = checkdin(arr, n);
				cout << "Индекс элемента, значение которого делится на каждую цфиру числа: " << v << endl;
				type1 = true;
			}
			if (z == 2) {
				if (type1) {
					arr = pastedin(arr, n, v);
					n++;
					cout << "Массив, полученный после вставки элемента: ";
					output(arr, n);
					cout << endl;
				}
				else {
					cout << "Невоможно выполнить задание, так как индекс элемента еще не был обнаружен" << endl;
				}
			}
			if (z == 3) {
				arr = deldin(arr, n);
				cout << endl << "Массив, полученный после удаления элементов, кратных трём: ";
				output(arr, n);
				cout << endl;
			}
		}
		else if (Q == 3) {
			if (z == 1) {
				v = checkvect(n, myVector);
				cout << "Индекс элемента, значение которого делится на каждую из цифр числа: " << v << endl;
				type1 = true;
			}
			if (z == 2) {
				if (type1) {

					pastevect(v, myVector, n);

					cout << "Массив, полученный после вставки элемента: ";
					outvect(n, myVector);

					cout << endl;
				}
				else {
					cout << "Невоможно выполнить задание, так как индекс элемента еще не был обнаружен" << endl;
				}
			}
			if (z == 3) {
				delvect(n, myVector);

				cout << "Массив, полученный после удаления элементов, кратных трём: ";
				outvect(n, myVector);
				cout << endl;
			}
		}
	}
}
